library(tidyverse)
library(gapminder)
library(gganimate)
library(NHANES)
library(ggrepel)
library(plotly)

# Animating gapminder data ####
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  facet_wrap(~ continent) +
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  ease_aes('linear')

country_list <- c("France", "Germany", "United Kingdom")
gapminder %>%
  filter(continent == "Europe" & country %in% country_list) %>%
  ggplot(aes(gdpPercap, lifeExp, size = pop, group = country, colour = country, label = country)) +
  geom_line() +
  scale_x_log10() +
  geom_text(colour = "black", size = 5) +
  guides(colour = FALSE, label = FALSE, size = FALSE) +
  labs(title = 'Year: {frame_along}', x = 'GDP per capita', y = 'Life expectancy') +
  transition_reveal(year) 

df_Americas <- gapminder %>% filter(continent == "Americas")
ggplot(df_Americas, aes(x = lifeExp, y = fct_reorder(country, lifeExp))) +
  geom_point(color = "#0072B2", size = 3) +
  scale_x_continuous(name = "life expectancy (years)",
                     limits = c(30, 85),
                     expand = c(0, 0)) +
  scale_y_discrete(name = NULL, expand = c(0, 0.5)) +
  labs(title = 'Year: {frame_time}') + 
  theme(title = element_text(size = 15)) +
  transition_time(year) +
  ease_aes('linear')

# Try plotly
df_Americas <- gapminder %>% filter(continent == "Americas")
p <- ggplot(df_Americas, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  labs(x = 'GDP per capita', y = 'life expectancy') +
  guides(size = FALSE, colour = FALSE)
 
ggplotly(p)  


# Animating NHANES data ####
NHANES %>% 
  distinct(ID, .keep_all = TRUE) %>%
  filter(!is.na(BMI)) %>%
  ggplot(aes(x = Race1, y = BMI, colour = Race1)) + 
  geom_boxplot() +
  guides(colour = FALSE) +
  labs(x = "Race", title = "Age Decade = {closest_state}") +
  transition_states(AgeDecade)

set.seed(1234)
NHANES %>% 
  distinct(ID, .keep_all = TRUE) %>%
  filter(!is.na(BMI)) %>%
  ggplot(aes(x = Race1, y = BMI, colour = Race1)) + 
  geom_jitter() +
  guides(colour = FALSE) +
  labs(x = "Race", title = "Age Decade = {closest_state}")

plot <- gapminder::gapminder %>% 
  group_by(continent) %>% 
  summarise(meanlife=mean(lifeExp)) %>% 
  ggplot(aes(continent,meanlife))+
  geom_col()

tbl <- tableGrob(gapminder::gapminder %>% 
                   group_by(continent) %>% 
                   summarise(meanlife=round(mean(lifeExp),0)) %>% 
                   spread(continent,meanlife))

grid.arrange(plot,tbl)

